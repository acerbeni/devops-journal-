name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]  # Ex√©cut√© √† chaque PR vers main

env:
  IMAGE_NAME: myapp
  DOCKER_REGISTRY: ghcr.io/${{ github.repository_owner }}
  STAGING_COMPOSE_FILE: docker-compose.staging.yml
jobs:
  lint:
    name: üßπ Lint code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install flake8
        run: pip install flake8

      - name: Run flake8
        run: flake8 app tests
  test:
    name: üß™ Run unit tests
    runs-on: ubuntu-latest
    needs: lint  # Ce job s'ex√©cute apr√®s le lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r app/requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest tests/
  docker-build:
    name: üê≥ Build Docker image
    runs-on: ubuntu-latest
    needs: test  # Ce job attend que les tests passent

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_REGISTRY/$IMAGE_NAME:pr-${{ github.event.pull_request.number }} .

      - name: (Optional) Push image to GHCR
        run: |
          docker push $DOCKER_REGISTRY/$IMAGE_NAME:pr-${{ github.event.pull_request.number }}
